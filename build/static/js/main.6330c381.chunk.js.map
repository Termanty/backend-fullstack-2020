{"version":3,"sources":["components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","index.js","components/App.js"],"names":["Notification","notification","className","type","message","Filter","filter","handelFilterChange","value","onChange","PersonForm","onAdd","newName","handelNameChange","newNumber","handelNumberChange","onSubmit","PersonItem","person","onDelete","name","number","onClick","id","Persons","persons","toLowerCase","includes","map","key","baseUrl","axios","get","then","response","data","post","put","delete","ReactDOM","render","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","personServices","setTimeout","event","target","preventDefault","p","window","confirm","find","updatedContact","catch","result","updatePhoneNumber","concat","error","personToDelete","document","getElementById"],"mappings":"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","file":"static/js/main.6330c381.chunk.js","sourcesContent":["import React from 'react';\nexport const Notification = ({ notification }) => {\n  if (notification === null)\n    return null;\n  return <p className={notification.type}>{notification.message}</p>;\n};\n","import React from 'react';\n\nexport const Filter = ({ filter, handelFilterChange }) => {\n  return (<p>\n    filter shown with\n      <input value={filter} onChange={handelFilterChange} />\n  </p>);\n};","import React from 'react';\n\nexport const PersonForm = ({ onAdd, newName, handelNameChange, newNumber, handelNumberChange }) => {\n  return (<form onSubmit={onAdd}>\n    <div>\n      name: <input value={newName} onChange={handelNameChange} />\n    </div>\n    <div>\n      number: <input value={newNumber} onChange={handelNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>);\n};","import React from 'react';\n\nconst PersonItem = ({ person, onDelete }) => {\n  return (\n    <li>\n      {person.name} {person.number} <button onClick={onDelete(person.id)}>delete</button>\n    </li>\n  )\n}\n\nexport const Persons = ({ persons, filter, onDelete }) => {\n  return (<ul>\n    {persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n      .map(person => <PersonItem person={person} onDelete={onDelete} key={person.name} />)}\n  </ul>);\n};","import axios from 'axios'\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = ( person ) => {\n  const request = axios.post(baseUrl, person)\n  return request.then(response => response.data)\n}\n\nconst update = ( person ) => { \n  const request = axios.put(`${baseUrl}/${person.id}`, person)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App.js'\n\nReactDOM.render(<App />, document.getElementById('root'));","import React, { useState, useEffect } from 'react'\nimport { Notification } from './Notification'\nimport { Filter } from './Filter'\nimport { PersonForm } from './PersonForm'\nimport { Persons } from './Persons'\nimport personServices from '../services/persons'\nimport '../index.css'\n\nexport const App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personServices\n      .getAll()\n      .then(data => {\n        setPersons(data)\n      })\n  }, [])\n\n  useEffect(() => {\n    if(notification === null) return\n    setNewName('')\n    setNewNumber('')  \n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }, [notification])\n\n  const addContact = () => {\n    const newContact = { name: newName, number: newNumber }\n    personServices\n      .create(newContact)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setNotification({ message: `Added ${response.name}`, type: 'notification' })\n      })\n      .catch(error => {\n        setNotification({ message: error.response.data.error, type: 'error'})\n      })\n  }\n\n  const updatePhoneNumber = () => {\n    const p = persons.find(p => p.name === newName)\n    const updatedContact = { id: p.id, name: newName, number: newNumber }\n    personServices\n      .update(updatedContact)\n      .then(response => {\n        setPersons(persons.map(person => {\n          if(person.name === newName) {\n            return { id: response.id, name: response.name, number: response.number }\n          } else { \n            return { id: person.id, name: person.name, number: person.number } \n          }\n        }))\n        setNotification({ message: `Updated number for ${response.name}`, type: \"notification\" })\n      })\n      .catch(result => {\n        setPersons(persons.filter(person => person.id !== p.id))\n        setNotification({ message: `Information of ${p.name} has been removed from server`, type: \"error\" })\n      })\n  }\n\n  const onAdd = (event) => {\n    event.preventDefault()\n    if (persons.map(p => p.name).includes(newName)) {\n      if(window.confirm(`${newName} is already added to phonebook, do you want to change phone number`)) {\n        updatePhoneNumber()\n      }\n    } else {\n      addContact()\n    } \n  }\n\n  const onDelete = (id) => {\n    return () => {\n      const personToDelete = persons.find(p => p.id === id).name\n      if(!window.confirm(`Delete ${personToDelete}`)) return\n      personServices\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          setNotification({ message: `Deleted ${personToDelete}`, type: \"notification\" })\n        })\n    }\n  }\n\n  const handelNameChange = (event) => setNewName(event.target.value)\n  const handelNumberChange = (event) => setNewNumber(event.target.value)\n  const handelFilterChange = (event) => setFilter(event.target.value)\n\n  return (\n    <div>\n      <Notification notification={notification} />\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handelFilterChange={handelFilterChange} />\n      \n      <h3>add a new</h3>\n      <PersonForm\n        onAdd={onAdd}\n        newName={newName}\n        handelNameChange={handelNameChange}\n        newNumber={newNumber}\n        handelNumberChange={handelNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} onDelete={onDelete} />\n    </div>\n  )\n}"],"sourceRoot":""}